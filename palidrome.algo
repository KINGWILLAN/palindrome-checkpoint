ALGORITHM palindrome_checker
VAR
    word: STRING = "kayak"
    reversedWord:STRING
BEGIN
    
    reversedWord = reverse_string (word)

//check if word contains a single character of am empty space
IF (word.lengthv < 2 OR word = " ") THEN
    write(word + "" + "this is a palindrome")
END_IF

//compare the ending character in eac word against the other
IF (word [word.length -1] = reversedWord[reversedWord.length - 1]) THEN

    // compare the reverse string against each other to check if the word is a palindrome

    IF (word = reversedWord) THEN
            write(word + "" + "this is a palindrome")
    END_IF

ELSE
    write(word + "" + "this is a not palindrome")
END_IF
END

FUNCTION reverse_string (word) : STRING
VAR
    testString: STRING = '';
BEGIN
// we will dereament from the word.length-1 untill its less than or equal  to zero
    FOR i FROM word.length -1 TO max 0 step 1-- DO
        testString = testString + word[i]

    END_FOR
    RETURN testString ;
END